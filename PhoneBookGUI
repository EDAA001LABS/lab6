package phonebook;

import javax.swing.*;

import java.awt.*;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.*;

public class PhoneBookGUI extends JFrame {
	private PhoneBook phoneBook;
	public JTextArea messageArea;
	private File file;

	public PhoneBookGUI(PhoneBook pb) {
		super("PhoneBook");
		phoneBook = pb;
		
		try {
//			file = new File("/h/d1/g/mt09dh2/edaa01-workspace/lab6/src/phonebook/catalog.txt");
			final JFileChooser fc = new JFileChooser();
			int returnVal = fc.showOpenDialog(this);
			if (returnVal == JFileChooser.APPROVE_OPTION) {
				file = fc.getSelectedFile();
				ObjectInputStream in = new ObjectInputStream(new FileInputStream(file));
				phoneBook = (PhoneBook) in.readObject();
			} 
		} catch (Exception exc) {
			exc.printStackTrace();
		}
		
		setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
		Locale.setDefault(new Locale("en"));
		
		
		/* To avoid hardcoded Swedish text on OptionPane dialogs */
		UIManager.put("OptionPane.cancelButtonText", "Cancel");
		setLayout(new BorderLayout());
		JMenuBar menubar = new JMenuBar();
		setJMenuBar(menubar);
		JMenu editMenu = new JMenu("Edit");
		menubar.add(editMenu);
		editMenu.add(new AddMenu(phoneBook, this));
		editMenu.add(new RemoveMenu(phoneBook, this));
		
		JMenu findMenu = new JMenu("Find");
		menubar.add(findMenu);
		findMenu.add(new FindNumbers(phoneBook, this));
		findMenu.add(new FindNames(phoneBook, this));
		JMenu viewMenu = new JMenu("View");
		menubar.add(viewMenu);
		viewMenu.add(new ShowAll(phoneBook, this));
		JPanel southPanel = new JPanel();
		
		
		messageArea = new JTextArea(4, 25);
		messageArea.setEditable(false);
		southPanel.add(new JScrollPane(messageArea));
		southPanel.add(new QuitButton(phoneBook, this));
		add(southPanel, BorderLayout.CENTER);
		pack();
		setVisible(true);
	}
}
